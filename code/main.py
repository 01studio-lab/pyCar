from machine import I2C,Pin,ADC        #从machine模块导入I2C、Pin子模块
from ssd1306 import SSD1306_I2C     #从ssd1306模块中导入SSD1306_I2C子模块
import framebuf,time

i2c = I2C(sda=Pin(13), scl=Pin(14))   #I2C初始化：sda--> 13, scl --> 14
oled = SSD1306_I2C(128, 64, i2c, addr=0x3c) #OLED显示屏初始化：128*64分辨率,OLED的I2C地址是0x3c

x = ADC(Pin(32))
x.atten(ADC.ATTN_11DB)
y = ADC(Pin(33))
y.atten(ADC.ATTN_11DB)


a=0
b=0
up=False
down=False
left=False
right=False


def Car_screen(wifi,blue,red,light,up,down,left,right,speed,distance):
    oled.fill(0)
    wifibuf=framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x10\x08\x14(\x14(\x14(\x10\x08\x00\x00\x01\x80\x01\x80\x01\x80\x01\xc0\x03\xc0\x00\x00\x00\x00\x00\x00'),16,16,framebuf.MONO_HLSB)
    bluetoothbuf=framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x01\x80\x01\xc0\x05`\x07\xc0\x03\x80\x01\x80\x03\xc0\x05`\x01\xc0\x01\x80\x00\x00\x00\x00\x00\x00\x00\x00'),16,16,framebuf.MONO_HLSB)
    redbuf=framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x80\x19\x98\t\x90\x05\xa0\x04 \x00\x00\x03\xc0\x07\xe0\x1f\xf8\x00\x00\x00\x00\x00\x00'),16,16,framebuf.MONO_HLSB)
    lightbuf=framebuf.FrameBuffer(bytearray(b'\x00\x00\x03\x80\x0c`\x080\x10\x10\x10\x10\x11\x10\x19\x10\t \x05`\x07\xc0\x04@\x04@\x07\xc0\x03\x80\x00\x00'),16,16,framebuf.MONO_HLSB)
    arrowbuf=framebuf.FrameBuffer(bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0\x00\x00\x00\x00\x00\x00\x03\xe0\x00\x00\x00\x00\x00\x00\x07\xf0\x00\x00\x00\x00\x00\x00\x0f\xf8\x00\x00\x00\x00\x00\x00\x0f\xf8\x00\x00\x00\x00\x00\x00\x1e<\x00\x00\x00\x00\x00\x00<\x1e\x00\x00\x00\x00\x00\x00x\x0f\x00\x00\x00\x00\x00\x00x\x0f\x00\x00\x00\x00\x00\x00\xf0\x07\x80\x00\x00\x00\x00\x01\xe0\x03\xc0\x00\x00\x00\x00\x01\xe0\x03\xc0\x00\x00\x00\x00\x01\xfc\x1f\xc0\x00\x00\x00\x00\x01\xfc\x1f\xc0\x00\x00\x00\x00\x00\xfc\x1f\x80\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x0f\x00\x1c\x1c\x00x\x00\x00\x1f\x80\x1c\x1c\x00\xfc\x00\x00\x7f\x80\x1c\x1c\x00\xff\x00\x00\xff\x80\x1c\x1c\x00\xff\x80\x01\xf3\xff\xff\xff\xff\xe7\xc0\x07\xe3\xff\xff\xff\xff\xe3\xf0\x0f\x83\xff\xff\xff\xff\xe0\xf8\x1f\x00\x00\x1f\xfc\x00\x00|>\x00\x00\x1f\xfc\x00\x00>>\x00\x00\x1f\xfc\x00\x00>>\x00\x00\x1f\xfc\x00\x00>\x1f\x00\x00\x1f\xfc\x00\x00|\x0f\x83\xff\xff\xff\xff\xe0\xf8\x07\xe3\xff\xff\xff\xff\xe3\xf0\x01\xf3\xff\xff\xff\xff\xe7\xc0\x00\xff\x80\x1c\x1c\x00\xff\x80\x00\x7f\x80\x1c\x1c\x00\xff\x00\x00\x1f\x80\x1c\x1c\x00\xfc\x00\x00\x0f\x00\x1c\x1c\x00x\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\x1c\x1c\x00\x00\x00\x00\x00\x00\xfc\x1f\x80\x00\x00\x00\x00\x01\xfc\x1f\xc0\x00\x00\x00\x00\x01\xfc\x1f\xc0\x00\x00\x00\x00\x01\xe0\x03\xc0\x00\x00\x00\x00\x01\xe0\x03\xc0\x00\x00\x00\x00\x00\xf0\x07\x80\x00\x00\x00\x00\x00x\x0f\x00\x00\x00\x00\x00\x00x\x0f\x00\x00\x00\x00\x00\x00<\x1e\x00\x00\x00\x00\x00\x00\x1e<\x00\x00\x00\x00\x00\x00\x0f\xf8\x00\x00\x00\x00\x00\x00\x0f\xf8\x00\x00\x00\x00\x00\x00\x07\xf0\x00\x00\x00\x00\x00\x00\x03\xe0\x00\x00\x00\x00\x00\x00\x01\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'),64,64,framebuf.MONO_HLSB)
    
    if wifi:
        oled.blit(wifibuf,0,1)
    if blue:
        oled.blit(bluetoothbuf,0,17)
    if red:
        oled.blit(redbuf,0,31)
    if light:
        oled.blit(lightbuf,1,47)
        
    oled.blit(arrowbuf,17,0)
    
    if up:
        oled.fill_rect(49,27,26,11,1)
    if down:
        oled.fill_rect(24,27,26,11,1)
    if left:
        oled.fill_rect(44,7,11,26,1)
    if right:
        oled.fill_rect(44,32,11,26,1)
    
    oled.text("D:cm", 84,8)
    oled.text("%.2f" % distance,84,18)
    oled.text("V:m/s",84,38)   
    oled.text("%.2f" % speed,84,48)      
    oled.vline(16,0,64,1)
    oled.vline(82,0,64,1)
    oled.hline(82,32,40,1)
    oled.rect(0,0,128,64,1)

    oled.show()   #OLED执行显示

while 1:
    a=a+0.01
    b=b+0.01
    xraw=x.read()
    yraw=y.read()
    print(xraw,yraw)
    if yraw>4000:
        left=True
        right=False
    elif yraw<200:
        right=True
        left=False
    else:
        left=False
        right=False
    if xraw>4000:
        down=True
        up=False
    elif xraw<200:
        up=True
        down=False
    else:
        up=False
        down=False
    Car_screen(1,1,1,1,up,down,left,right,a,b)
